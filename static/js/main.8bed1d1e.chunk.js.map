{"version":3,"sources":["components/NavBar/NavBar.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.jsx","components/NavBar/NavBar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/Profile.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","s","header","alt","src","NavBar","nav","item","active","href","Post","MyPosts","posts","Profile","content","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oHACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,yB,gBCAjFD,EAAOC,QAAU,CAAC,MAAQ,yB,kBCA1BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,KAAO,qB,+KCWVC,EATA,WACX,OACI,4BAAQC,UAAWC,IAAEC,QACjB,yBAAKC,IAAI,eACJC,IAAI,+E,gBCkBNC,EAtBA,WACX,OACI,yBAAKL,UAAWC,IAAEK,KACd,yBAAKN,UAAS,UAAKC,IAAEM,KAAP,YAAeN,IAAEO,SAC3B,uBAAGC,KAAK,0BAAR,YAEJ,yBAAKT,UAAWC,IAAEM,MACd,uBAAGE,KAAK,0BAAR,aAEJ,yBAAKT,UAAWC,IAAEM,MACd,uBAAGE,KAAK,0BAAR,SAEJ,yBAAKT,UAAWC,IAAEM,MACd,uBAAGE,KAAK,0BAAR,UAEJ,yBAAKT,UAAWC,IAAEM,MACd,uBAAGE,KAAK,0BAAR,e,gDCHDC,EAbF,WACT,OACY,yBAAKV,UAAWC,IAAEM,MACd,yBAAKJ,IAAI,SACJC,IAAI,qHAAoH,6BAFjI,8BAII,6BACI,yCCcTO,EApBC,WACZ,OACI,yBAAKX,UAAWC,IAAEW,OAAlB,WAEI,6BACI,qDACA,4CACA,gDAEJ,yBAAKZ,UAAWC,IAAEW,OACd,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCEDC,EAhBC,WACZ,OACI,yBAAKb,UAAWC,IAAEa,SACd,6BACI,yBACIX,IAAI,cACJC,IAAI,gNAEZ,kDAGA,kBAAC,EAAD,QCEGW,EAVH,WACR,OACI,yBAAKf,UAAU,eACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCAQgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.8bed1d1e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__15ym1\",\"item\":\"NavBar_item__3GbjX\",\"active\":\"NavBar_active__196Nf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__f7eFs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1KfCF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__1wp5v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2XXpH\"};","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img alt='logo company'\r\n                 src='https://cdn3.iconfinder.com/data/icons/picons-social/57/56-apple-512.png'/>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from './NavBar.module.css';\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <a href='https://www.google.by/'>Profile</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a href='https://www.google.by/'>Messages</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a href='https://www.google.by/'>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a href='https://www.google.by/'>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a href='https://www.google.by/'>Settings</a>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = () => {\r\n    return (\r\n                <div className={s.item}>\r\n                    <img alt='avatar'\r\n                         src='https://i0.wp.com/www.winhelponline.com/blog/wp-content/uploads/2017/12/user.png?fit=256%2C256&quality=100&ssl=1'/><br/>\r\n                    Hi, Bro! My name is Nikita!\r\n                    <div>\r\n                        <span>like</span>\r\n                    </div>\r\n                </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = () => {\r\n    return (\r\n        <div className={s.posts}>\r\n            my posts\r\n            <div>\r\n                <textarea>Write something</textarea>\r\n                <button>Add post</button>\r\n                <button>Post remove</button>\r\n            </div>\r\n            <div className={s.posts}>\r\n                <Post/>\r\n                <Post/>\r\n                <Post/>\r\n                <Post/>\r\n                <Post/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\n\r\nconst Profile = () => {\r\n    return (\r\n        <div className={s.content}>\r\n            <div>\r\n                <img\r\n                    alt='img content'\r\n                    src='https://www.ft.com/__origami/service/image/v2/images/raw/https%3A%2F%2Fs3-ap-northeast-1.amazonaws.com%2Fpsh-ex-ftnikkei-3937bb4%2Fimages%2F1%2F1%2F4%2F9%2F21329411-1-eng-GB%2F0699279.jpg?source=nar-cms'/>\r\n            </div>\r\n            <div>\r\n                ava + description\r\n            </div>\r\n            <MyPosts/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport Profile from \"./components/Profile/Profile\";\n\n\nconst App = () => {\n    return (\n        <div className='app-wrapper'>\n            <Header/>\n            <NavBar/>\n            <Profile/>\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}