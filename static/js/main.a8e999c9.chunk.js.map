{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Users/Users.module.css","components/Header/Header.module.css","components/NavBar/NavBar.module.css","components/Profile/MyPosts/Post/Post.module.css","serviceWorker.js","redux/reducer-profile.js","redux/reducer-dialogs.js","redux/reducer-users.js","redux/redux-store.js","components/Header/Header.jsx","components/NavBar/NavBar.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx","App.js","index.js","components/Dialogs/Dialogs.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","posts","id","message","likesCount","newPostText","profileReducer","state","action","type","newText","newPost","messages","dialogs","name","newMessageBody","dialogsReducer","body","users","usersReducer","map","u","usersId","followed","el","reducers","combineReducers","profilePage","dialogsPage","usersPage","store","createStore","Header","className","s","header","alt","src","NavBar","nav","item","to","activeClassName","activeLink","ProfileInfo","profileInfo","description","Post","props","MyPosts","postsElements","p","key","newPostElement","React","createRef","postsBlock","ref","placeholder","value","onChange","text","current","updateNewPostText","onClick","addPost","MyPostsContainer","connect","dispatch","updateNewPostTextActionCreator","Profile","News","Music","Settings","DialogItem","path","dialog","active","Message","Dialogs","dialogsElements","d","messagesElements","m","dialogsItems","e","target","updateNewMessageBody","sendMessage","DialogsContainer","updateNewMessageBodyCreator","Users","length","setUsers","fullName","photoURL","status","city","country","container","photoAvatar","unFollow","follow","UsersContainer","userId","setUsersAC","App","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a8e999c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__217Zm\",\"description\":\"ProfileInfo_description__1_wb2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2_FlQ\",\"posts\":\"MyPosts_posts__f7eFs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoAvatar\":\"Users_photoAvatar__3ZEqd\",\"container\":\"Users_container__2nfl8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1KfCF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__15ym1\",\"item\":\"NavBar_item__3GbjX\",\"activeLink\":\"NavBar_activeLink__2hBg6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2XXpH\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST});\r\nexport const updateNewPostTextActionCreator = (text) =>\r\n    ({type: UPDATE_NEW_POST_TEXT, newText: text});\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi? how are you?', likesCount: 'Like - 327'},\r\n        {id: 2, message: 'Hello! It is my first project!', likesCount: 'Like - 125'},\r\n        {id: 3, message: 'Hello!', likesCount: 'Like - 25'}\r\n    ],\r\n    newPostText: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            };\r\n        }\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 4,\r\n                message: state.newPostText,\r\n                likesCount: 'Like - 112'\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND-MESSAGE';\r\nconst UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\n\r\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE});\r\nexport const updateNewMessageBodyCreator = (body) =>\r\n    ({type: UPDATE_NEW_MESSAGE_BODY, body: body});\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: ''}\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Nikita'},\r\n        {id: 2, name: 'Masha'},\r\n        {id: 3, name: 'Sasha'}\r\n    ],\r\n    newMessageBody: ''\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            };\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 4, message: body}],\r\n                newMessageBody: ''\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default dialogsReducer;","const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\n\r\nlet initialState = {\r\n    users: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.usersId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(el => {\r\n                    if (el.id === action.usersId) {\r\n                        return {...el, followed: false}\r\n                    }\r\n                    return el;\r\n                })\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: [...state.users, ...action.users]}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followAC = (usersId) => (\r\n    {type: FOLLOW, usersId}\r\n);\r\nexport const unFollowAC = (usersId) => (\r\n    {type: UNFOLLOW, usersId}\r\n);\r\nexport const setUsersAC = (users) => (\r\n    {type: SET_USERS, users}\r\n);\r\n\r\nexport default usersReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./reducer-profile\";\r\nimport dialogsReducer from \"./reducer-dialogs\";\r\nimport usersReducer from \"./reducer-users\";\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        profilePage: profileReducer,\r\n        dialogsPage: dialogsReducer,\r\n        usersPage: usersReducer\r\n    }\r\n);\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img alt='logo company'\r\n                 src='https://cdn3.iconfinder.com/data/icons/picons-social/57/56-apple-512.png'/>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from './NavBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div>\r\n                <img\r\n                    alt='img content'\r\n                    src='https://iycoalition.org/wp-content/uploads/social-media-mobile-icons-snapchat-facebook-instagram-ss-800x450-3-800x450.jpg'/>\r\n        </div>\r\n            <div className={s.description}>\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img alt='avatar'\r\n                 src='https://i0.wp.com/www.winhelponline.com/blog/wp-content/uploads/2017/12/user.png?fit=256%2C256&quality=100&ssl=1'/><br/>\r\n            {props.message}\r\n            <div>\r\n                {props.likesCount}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    };\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>my posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea ref={newPostElement}\r\n                              placeholder={'Enter your post'}\r\n                              value={props.newPostText}\r\n                              onChange={onPostChange}/>\r\n                </div>\r\n                <div>\r\n                    <button onClick={onAddPost}>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPosts;","import {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/reducer-profile\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator());\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = () => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\n// import s from './Settings.module.css'\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default News;","import React from 'react';\r\n// import s from './Settings.module.css'\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\n// import s from './Settings.module.css'\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n\r\n    return (<div>\r\n            <div className={s.dialog}>{props.message}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n    let messagesElements = props.dialogsPage.messages.map(m => <Message key={m.id} message={m.message}/>);\r\n    let newMessageBody = props.dialogsPage.newMessageBody;\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage();\r\n    };\r\n\r\n    let onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateNewMessageBody(body);\r\n    };\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <div>\r\n                    <textarea placeholder={'Enter your message'}\r\n                              value={newMessageBody}\r\n                              onChange={onNewMessageChange}/>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onSendMessageClick}>Send message</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;","import {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/reducer-dialogs\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: () => {\r\n            let action = sendMessageCreator();\r\n            dispatch(action);\r\n        },\r\n        updateNewMessageBody: (body) => {\r\n            dispatch(updateNewMessageBodyCreator(body));\r\n        }\r\n    }\r\n};\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;\r\n","import React from \"react\";\r\nimport s from './Users.module.css';\r\n\r\nconst Users = (props) => {\r\n    if (props.users.length === 0) {\r\n        props.setUsers(\r\n            [\r\n                {\r\n                    id: 1, fullName: 'Mikita',\r\n                    photoURL: 'https://i0.wp.com/www.winhelponline.com/blog/wp-content/uploads/2017/12/user.png?fit=256%2C256&quality=100&ssl=1',\r\n                    followed: false,\r\n                    status: 'Hello! I am jsDeveloper',\r\n                    location:\r\n                        {city: \"Minsk\", country: 'Belarus'}\r\n                },\r\n                {\r\n                    id: 2, fullName: 'Masha',\r\n                    photoURL: 'https://i0.wp.com/www.winhelponline.com/blog/wp-content/uploads/2017/12/user.png?fit=256%2C256&quality=100&ssl=1',\r\n                    followed: true,\r\n                    status: 'Hello! I am manager',\r\n                    location:\r\n                        {city: \"Warszawa\", country: 'Poland'}\r\n                },\r\n                {\r\n                    id: 3, fullName: 'Alex',\r\n                    photoURL: 'https://i0.wp.com/www.winhelponline.com/blog/wp-content/uploads/2017/12/user.png?fit=256%2C256&quality=100&ssl=1',\r\n                    followed: false,\r\n                    status: 'Hello! I am student',\r\n                    location:\r\n                        {city: \"Kiev\", country: 'Ukraine'}\r\n                }\r\n            ]\r\n        );\r\n    }\r\n\r\n    return <div>\r\n        {\r\n            props.users.map(u => <div key={u.id} className={s.container}>\r\n                <span>\r\n                    <div>\r\n                        <img alt='avatar' src={u.photoURL} className={s.photoAvatar}/>\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            u.followed === true\r\n                                ? <button onClick={() => {\r\n                                    props.unFollow(u.id)\r\n                                }}>unFollow</button>\r\n                                : <button onClick={() => {\r\n                                    props.follow(u.id)\r\n                                }}>Follow</button>\r\n                        }\r\n                    </div>\r\n                </span>\r\n\r\n                <span>\r\n                    <span>\r\n                        <div>{u.fullName}</div>\r\n                        <div>{u.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{u.location.city}</div>\r\n                        <div>{u.location.country}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)\r\n        }\r\n    </div>\r\n};\r\n\r\nexport default Users;\r\n\r\n","import {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {followAC, setUsersAC, unFollowAC} from \"../../redux/reducer-users\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            return dispatch(followAC(userId));\r\n        },\r\n        unFollow: (userId) => {\r\n            return dispatch(unFollowAC(userId));\r\n        },\r\n        setUsers: (users) => {\r\n            return dispatch(setUsersAC(users));\r\n        }\r\n    }\r\n};\r\n\r\nconst UsersContainer = connect(mapStateToProps, mapDispatchToProps)(Users);\r\n\r\nexport default UsersContainer;","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport Profile from \"./components/Profile/Profile\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport {Route} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\nconst App = () => {\n\n    return (\n        <div className='app-wrapper'>\n            <Header/>\n            <NavBar/>\n            <div className='app-wrapper-content'>\n                <Route path='/profile'\n                       render={() => <Profile/>}/>\n                <Route path='/dialogs'\n                       render={() => <DialogsContainer/>}/>\n                <Route path='/news'\n                       render={() => <News/>}/>\n                <Route path='/music'\n                       render={() => <Music/>}/>\n                <Route path='/settings'\n                       render={() => <Settings/>}/>\n                <Route path='/users'\n                       render={() => <UsersContainer/>}/>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","import * as serviceWorker from './serviceWorker';\nimport store from \"./redux/redux-store\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1-To-\",\"dialogsItems\":\"Dialogs_dialogsItems__2TuGs\",\"dialog\":\"Dialogs_dialog__19heD\",\"active\":\"Dialogs_active__2u5Fn\",\"messages\":\"Dialogs_messages__1GY_g\",\"message\":\"Dialogs_message__1RYzg\"};"],"sourceRoot":""}