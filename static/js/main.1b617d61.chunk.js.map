{"version":3,"sources":["components/NavBar/NavBar.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.jsx","components/NavBar/NavBar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","App.js","serviceWorker.js","redux/state.js","index.js"],"names":["module","exports","Header","className","s","header","alt","src","NavBar","nav","item","to","activeClassName","activeLink","Post","props","message","likesCount","MyPosts","postsElements","posts","map","p","postsBlock","ProfileInfo","profileInfo","description","Profile","state","DialogItem","path","id","dialog","active","name","Message","Dialogs","dialogsElements","dialogs","d","messagesElements","messages","m","dialogsItems","News","Music","Settings","App","render","profilePage","messagesPage","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,WAAa,6B,kBCArFD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sBCAnND,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,gBCAnED,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,mC,mBCA/ED,EAAOC,QAAU,CAAC,OAAS,yB,kBCA3BD,EAAOC,QAAU,CAAC,KAAO,qB,sLCWVC,EATA,WACX,OACI,4BAAQC,UAAWC,IAAEC,QACjB,yBAAKC,IAAI,eACJC,IAAI,+E,uBCmBNC,EAtBA,WACX,OACI,yBAAKL,UAAWC,IAAEK,KACd,yBAAKN,UAAWC,IAAEM,MACd,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBR,IAAES,YAA1C,YAEJ,yBAAKV,UAAWC,IAAEM,MACd,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBR,IAAES,YAA1C,aAEJ,yBAAKV,UAAWC,IAAEM,MACd,kBAAC,IAAD,CAASC,GAAG,QAAQC,gBAAiBR,IAAES,YAAvC,SAEJ,yBAAKV,UAAWC,IAAEM,MACd,kBAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBR,IAAES,YAAxC,UAEJ,yBAAKV,UAAWC,IAAEM,MACd,kBAAC,IAAD,CAASC,GAAG,YAAYC,gBAAiBR,IAAES,YAA3C,e,kCCJDC,EAbF,SAACC,GACV,OACI,yBAAKZ,UAAWC,IAAEM,MACd,yBAAKJ,IAAI,SACJC,IAAI,qHAAoH,6BAC5HQ,EAAMC,QACP,6BACKD,EAAME,cCgBRC,EAtBC,SAACH,GAEb,IAAII,EAAgBJ,EAAMK,MAAMC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAMN,QAASM,EAAEN,QAASC,WAAYK,EAAEL,gBAEjF,OACI,yBAAKd,UAAWC,IAAEmB,YACd,wCACA,6BACI,6BACI,0CAEJ,6BACI,8CAGR,yBAAKpB,UAAWC,IAAEgB,OACbD,K,iBCFFK,EAfK,WAChB,OACI,yBAAKrB,UAAWC,IAAEqB,aACd,6BACI,yBACInB,IAAI,cACJC,IAAI,8HAEZ,yBAAKJ,UAAWC,IAAEsB,aAAlB,uBCIGC,EAVC,SAACZ,GAEb,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAASK,MAAOL,EAAMa,MAAMR,U,gBCGzBS,EATI,SAACd,GAChB,IAAIe,EAAO,YAAcf,EAAMgB,GAC/B,OACI,yBAAK5B,UAAWC,IAAE4B,OAAS,IAAM5B,IAAE6B,QAC/B,kBAAC,IAAD,CAAStB,GAAImB,GAAOf,EAAMmB,QCCvBC,EANC,SAACpB,GACb,OACI,yBAAKZ,UAAWC,IAAE4B,QAASjB,EAAMC,UCiB1BoB,EAjBC,SAACrB,GAEb,IAAIsB,EAAkBtB,EAAMa,MAAMU,QAAQjB,KAAI,SAAAkB,GAAC,OAAI,kBAAC,EAAD,CAAYL,KAAMK,EAAEL,KAAMH,GAAIQ,EAAER,QAC/ES,EAAmBzB,EAAMa,MAAMa,SAASpB,KAAI,SAAAqB,GAAC,OAAI,kBAAC,EAAD,CAAS1B,QAAS0B,EAAE1B,aAEzE,OACI,yBAAKb,UAAWC,IAAEkC,SACd,yBAAKnC,UAAWC,IAAEuC,cACbN,GAEL,yBAAKlC,UAAWC,IAAEqC,UACbD,KCLFI,EARF,WACT,OACI,sCCMOC,EARD,WACV,OACI,uCCMOC,EARE,WACb,OACI,0C,OCuBOC,EAjBH,SAAChC,GAET,OACI,yBAAKZ,UAAU,eACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CAAO2B,KAAK,WAAWkB,OAAQ,kBAAM,kBAAC,EAAD,CAASpB,MAAOb,EAAMa,MAAMqB,iBACjE,kBAAC,IAAD,CAAOnB,KAAK,WAAWkB,OAAQ,kBAAM,kBAAC,EAAD,CAASpB,MAAOb,EAAMa,MAAMsB,kBACjE,kBAAC,IAAD,CAAOpB,KAAK,QAAQkB,OAAQ,kBAAM,kBAAC,EAAD,SAClC,kBAAC,IAAD,CAAOlB,KAAK,SAASkB,OAAQ,kBAAM,kBAAC,EAAD,SACnC,kBAAC,IAAD,CAAOlB,KAAK,YAAYkB,OAAQ,kBAAM,kBAAC,EAAD,YCVlCG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DClBN,IA2Be3B,EA3BH,CACRqB,YAAa,CACT7B,MAAO,CACH,CAACW,GAAI,EAAGf,QAAS,mBAAoBC,WAAY,cACjD,CAACc,GAAI,EAAGf,QAAS,iCAAkCC,WAAY,cAC/D,CAACc,GAAI,EAAGf,QAAS,SAAUC,WAAY,eAG/CiC,aAAc,CACVT,SAAU,CACN,CAACV,GAAI,EAAGf,QAAS,qBACjB,CAACe,GAAI,EAAGf,QAAS,qBACjB,CAACe,GAAI,EAAGf,QAAS,oBACjB,CAACe,GAAI,EAAGf,QAAS,iBACjB,CAACe,GAAI,EAAGf,QAAS,kBAErBsB,QAAS,CACL,CAACP,GAAI,EAAGG,KAAM,UACd,CAACH,GAAI,EAAGG,KAAM,SACd,CAACH,GAAI,EAAGG,KAAM,SACd,CAACH,GAAI,EAAGG,KAAM,QACd,CAACH,GAAI,EAAGG,KAAM,SACd,CAACH,GAAI,EAAGG,KAAM,YCd1BsB,IAASR,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAKpB,MAAOA,KACE6B,SAASC,eAAe,SFsHxC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1b617d61.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__15ym1\",\"item\":\"NavBar_item__3GbjX\",\"activeLink\":\"NavBar_activeLink__2hBg6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1-To-\",\"dialogsItems\":\"Dialogs_dialogsItems__2TuGs\",\"dialog\":\"Dialogs_dialog__19heD\",\"active\":\"Dialogs_active__2u5Fn\",\"messages\":\"Dialogs_messages__1GY_g\",\"message\":\"Dialogs_message__1RYzg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2_FlQ\",\"posts\":\"MyPosts_posts__f7eFs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__217Zm\",\"description\":\"ProfileInfo_description__1_wb2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1KfCF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2XXpH\"};","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img alt='logo company'\r\n                 src='https://cdn3.iconfinder.com/data/icons/picons-social/57/56-apple-512.png'/>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from './NavBar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img alt='avatar'\r\n                 src='https://i0.wp.com/www.winhelponline.com/blog/wp-content/uploads/2017/12/user.png?fit=256%2C256&quality=100&ssl=1'/><br/>\r\n            {props.message}\r\n            <div>\r\n                {props.likesCount}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postsElements = props.posts.map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>my posts</h3>\r\n            <div>\r\n                <div>\r\n                    <textarea>...</textarea>\r\n                </div>\r\n                <div>\r\n                    <button>Add post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <div>\r\n                <img\r\n                    alt='img content'\r\n                    src='https://st.depositphotos.com/1038117/2709/i/450/depositphotos_27098687-stock-photo-caribbean-sea-and-wooden-platform.jpg'/>\r\n            </div>\r\n            <div className={s.description}>\r\n                ava + description\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\n// import s from './Profile.module.css';\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo/>\r\n            <MyPosts posts={props.state.posts}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.dialog}>{props.message}</div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.state.dialogs.map(d => <DialogItem name={d.name} id={d.id}/>);\r\n    let messagesElements = props.state.messages.map(m => <Message message={m.message}/>);\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;","import React from 'react';\r\n// import s from './Settings.module.css'\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default News;","import React from 'react';\r\n// import s from './Settings.module.css'\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\n// import s from './Settings.module.css'\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header/Header\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport Profile from \"./components/Profile/Profile\";\nimport Dialogs from \"./components/Dialogs/Dialogs\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport {Route} from \"react-router-dom\";\n\nconst App = (props) => {\n\n    return (\n        <div className='app-wrapper'>\n            <Header/>\n            <NavBar/>\n            <div className='app-wrapper-content'>\n                <Route path='/profile' render={() => <Profile state={props.state.profilePage}/>}/>\n                <Route path='/dialogs' render={() => <Dialogs state={props.state.messagesPage}/>}/>\n                <Route path='/news' render={() => <News/>}/>\n                <Route path='/music' render={() => <Music/>}/>\n                <Route path='/settings' render={() => <Settings/>}/>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let state = {\r\n    profilePage: {\r\n        posts: [\r\n            {id: 1, message: 'Hi? how are you?', likesCount: 'Like - 327'},\r\n            {id: 2, message: 'Hello! It is my first project!', likesCount: 'Like - 125'},\r\n            {id: 2, message: 'Hello!', likesCount: 'Like - 25'}\r\n        ]\r\n    },\r\n    messagesPage: {\r\n        messages: [\r\n            {id: 1, message: 'My first message!'},\r\n            {id: 2, message: 'My second message'},\r\n            {id: 3, message: 'My third message'},\r\n            {id: 4, message: 'My 4 message!'},\r\n            {id: 5, message: 'My 5 message!'}\r\n        ],\r\n        dialogs: [\r\n            {id: 1, name: 'Nikita'},\r\n            {id: 2, name: 'Masha'},\r\n            {id: 3, name: 'Sasha'},\r\n            {id: 4, name: 'Petr'},\r\n            {id: 5, name: 'Marat'},\r\n            {id: 6, name: 'Pavel'}\r\n        ]\r\n    }\r\n};\r\n\r\nexport default state;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport state from \"./redux/state\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App state={state}/>\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}